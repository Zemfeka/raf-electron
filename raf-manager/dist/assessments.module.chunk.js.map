{"version":3,"sources":["C:/Development/raf-electron/raf-manager/src/app/layout/assessments/assessments-routing.module.ts","C:/Development/raf-electron/raf-manager/src/app/layout/assessments/assessments.component.html","C:/Development/raf-electron/raf-manager/src/app/layout/assessments/assessments.component.scss","C:/Development/raf-electron/raf-manager/src/app/layout/assessments/assessments.component.ts","C:/Development/raf-electron/raf-manager/src/app/layout/assessments/assessments.module.ts","C:/Development/raf-electron/raf-manager/src/app/services/assessment.service.ts"],"names":[],"mappings":"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","file":"assessments.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AssessmentsComponent } from './assessments.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AssessmentsComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AssessmentsRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Development/raf-electron/raf-manager/src/app/layout/assessments/assessments-routing.module.ts","module.exports = \"<div [@routerTransition]>\\r\\n    <app-page-header [heading]=\\\"'Assessments'\\\" [icon]=\\\"'fa-calendar'\\\"></app-page-header>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col col-xl-12 col-lg-12 col-xs-12\\\">\\r\\n            <div class=\\\"card mb-12\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    Today's Assessments\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"card-body table-responsive\\\">\\r\\n                    <table class=\\\"table table-hover\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>Ref#</th>\\r\\n                                <th>Client Name</th>\\r\\n                                <th>Claiment First Name</th>\\r\\n                                <th>Claiment Last Name</th>\\r\\n                                <th>Booking Date</th>\\r\\n                                <th>Time</th>\\r\\n                                <th>Trial date</th>\\r\\n                                <th>Requested Report Date</th>\\r\\n                                <th>Notes</th>\\r\\n                                <th>ShowNoShow</th>\\r\\n                                <th></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let assessment of assessments\\\">\\r\\n                                <td>{{assessment.Reference}}</td>\\r\\n                                <td>{{assessment.ClientName}}</td>\\r\\n                                <td>{{assessment.ClaimentFirstName}}</td>\\r\\n                                <td>{{assessment.ClaimentLastName}}</td>\\r\\n                                <td>{{assessment.BookingDate|date}}</td>\\r\\n                                <td>{{assessment.Time}}</td>\\r\\n                                <td>{{assessment.TrialDate|date}}</td>\\r\\n                                <td>{{assessment.RequestedReportDate|date}}</td>\\r\\n                                <td>{{assessment.Notes}}</td>\\r\\n                                <td>{{assessment.ShowNoShow}}</td>\\r\\n                                <td>\\r\\n                                    <div class=\\\"btn-group\\\">\\r\\n                                        <button class=\\\"btn mce-btn-small\\\" (click)=\\\"open(content,this.assessment, false)\\\">\\r\\n                                                <span class=\\\"fa fa-hand-pointer-o\\\"></span>\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n\\r\\n                    </table>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <h4 class=\\\"modal-title\\\">Assessment Details</h4>\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"c('Close click')\\\">\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <ngb-tabset>\\r\\n                <ngb-tab title=\\\"Details\\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n                        <form role=\\\"form\\\">\\r\\n                            <fieldset class=\\\"form-group\\\">\\r\\n                                <label for=\\\"notes\\\">Notes</label>\\r\\n                                <textarea name=\\\"notes\\\" class=\\\"form-control\\\" rows=\\\"3\\\" placeholder=\\\"Enter text\\\" [(ngModel)]=\\\"assessment.Notes\\\"></textarea>\\r\\n                                <!-- <input name=\\\"notes\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text\\\" [(ngModel)]=\\\"assessment.Notes\\\"> -->\\r\\n                            </fieldset>\\r\\n                            <fieldset class=\\\"form-group\\\">\\r\\n                                <label for=\\\"shownoshow\\\">ShowNoShow</label>\\r\\n                                <input type=\\\"checkbox\\\" name=\\\"shownoshow\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text\\\" [(ngModel)]=\\\"assessment.ShowNoShow\\\">\\r\\n                            </fieldset>\\r\\n                        </form>\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab title=\\\"Documents\\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n                        <app-documents [bookingId]=\\\"assessment.BookingId\\\" (uploadClick)=\\\"uploadDocument($event)\\\"></app-documents>\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n            </ngb-tabset>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Close</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"saveAssessment() && c('Close click')\\\">Save</button>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Development/raf-electron/raf-manager/src/app/layout/assessments/assessments.component.html\n// module id = ../../../../../src/app/layout/assessments/assessments.component.html\n// module chunks = assessments.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Development/raf-electron/raf-manager/src/app/layout/assessments/assessments.component.scss\n// module id = ../../../../../src/app/layout/assessments/assessments.component.scss\n// module chunks = assessments.module","import { Component, OnInit } from '@angular/core';\r\nimport { AssessmentService, IAssessment } from '../../services/assessment.service';\r\nimport { BookingsService, IDocument } from '../../services/bookings.service';\r\nimport { routerTransition } from '../../router.animations';\r\n\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Time } from '@angular/common/src/i18n/locale_data_api';\r\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\r\nimport { Alert } from 'selenium-webdriver';\r\n\r\n@Component({\r\n    selector: 'app-assessments',\r\n    templateUrl: './assessments.component.html',\r\n    styleUrls: ['./assessments.component.scss'],\r\n    providers: [AssessmentService, NgbModal, FormsModule, ReactiveFormsModule,BookingsService],\r\n    animations: [routerTransition()]\r\n})\r\nexport class AssessmentsComponent implements OnInit {\r\n    assessments: IAssessment[];\r\n    closeResult: string;\r\n    assessment: IAssessment = this.initialiseAssessment();\r\n    documents: IDocument[] = [];\r\n\r\n    constructor(private assessmentService: AssessmentService, private modalService: NgbModal, private bookingsService: BookingsService) {}\r\n\r\n    initialiseAssessment() {\r\n        return {Id:0, Notes:'',UserId:0,BookingId:0,ShowNoShow:false,Reference:'',ClientName: '',ClaimentFirstName: '',  ClaimentLastName: '',  BookingDate: null,TrialDate:null,RequestedReportDate:null,  Time: null,  Date: null,  BookingTime: null};\r\n    }\r\n\r\n    getAssessments(){\r\n        this.assessmentService.getAssessments()\r\n            .subscribe(results => this.assessments = results,\r\n            error => console.log(\"Error :: \" + error))\r\n        \r\n    }\r\n\r\n    saveAssessment() {        \r\n        this.assessmentService.saveAssessment(this.assessment).subscribe(o => {\r\n            //save documents\r\n            if(this.documents.length > 0) {                            \r\n                for (let document of this.documents) {\r\n                    if(document.IsNew) {\r\n                        document.BookingId = this.assessment.BookingId;\r\n                        this.bookingsService.saveDocument(document).subscribe(d => {\r\n                            document.IsNew = false;\r\n                        },\r\n                        error => console.log(\"Error :: \" + error));\r\n                    }\r\n                }                     \r\n            }\r\n\r\n            this.getAssessments();\r\n        },\r\n        error => console.log(\"Error :: \" + error))   \r\n        \r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getAssessments();\r\n    }\r\n\r\n    open(content, data, isNew) {      \r\n        //we need to clear this list everytime we open as the actual list is mained on the child component.\r\n        this.documents = [];\r\n\r\n        if(!isNew) {        \r\n            this.assessment = data;\r\n        } else{\r\n            this.assessment = this.initialiseAssessment();\r\n        }\r\n        \r\n         this.modalService.open(content,{size: 'lg'}).result.then((result) => {\r\n            this.closeResult = `Closed with: ${result}`;\r\n        }, (reason) => {\r\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n        });\r\n    }\r\n\r\n    uploadDocument(document) {        \r\n        this.documents.push(document);        \r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return  `with: ${reason}`;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Development/raf-electron/raf-manager/src/app/layout/assessments/assessments.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AssessmentsRoutingModule } from './assessments-routing.module';\r\nimport { AssessmentsComponent } from './assessments.component';\r\nimport { PageHeaderModule } from './../../shared';\r\nimport { DocumentsModule } from '../components/documents/documents.module';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, AssessmentsRoutingModule,PageHeaderModule, NgbModule.forRoot(), FormsModule, ReactiveFormsModule,DocumentsModule],\r\n    declarations: [AssessmentsComponent]\r\n})\r\nexport class AssessmentsModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Development/raf-electron/raf-manager/src/app/layout/assessments/assessments.module.ts","import { Injectable } from '@angular/core';\r\nimport {Http, Response, Headers, RequestOptions, URLSearchParams} from \"@angular/http\";\r\nimport \"rxjs/Rx\";\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Time } from '@angular/common/src/i18n/locale_data_api';\r\nimport { IBooking } from '../services/bookings.service';\r\n\r\n@Injectable()\r\nexport class AssessmentService {\r\n  private assessmentServiceGetURL = \"http://localhost:3000/assessments/get\";\r\n  private assesmentServiceAddURL = \"http://localhost:3000/assessments/add\";\r\n  private assesmentServiceUpdateURL = \"http://localhost:3000/assessments/update\";\r\n  headers: Headers;\r\n  options: RequestOptions;\r\n\r\n  constructor(private http: Http) { \r\n    this.headers = new Headers({ 'Content-Type': 'application/json', \r\n    'Accept': 'q=0.8;application/json;q=0.9' });\r\n    this.options = new RequestOptions({ headers: this.headers });\r\n  }\r\n\r\n  getAssessments():Observable<IAssessment[]>{\r\n    return this.http.get(this.assessmentServiceGetURL)\r\n    .map((response: Response) => {\r\n      var mapped = <IAssessment[]>response.json();\r\n      return mapped;\r\n    })\r\n    .catch(this.handleError);\r\n  }\r\n\r\n  saveAssessment(assessment: IAssessment){\r\n    if(assessment.Id == 0 || assessment.Id == null){\r\n        return this.http.post(this.assesmentServiceAddURL, assessment,this.options)\r\n        .catch(this.handleError);\r\n    }else{\r\n      return this.http.put(this.assesmentServiceUpdateURL, assessment ,this.options)\r\n        .catch(this.handleError);\r\n    }\r\n  }\r\n\r\n  private handleError(error: Response){\r\n    return Observable.throw(error.statusText);\r\n  }\r\n\r\n}\r\n\r\nexport interface IAssessment{\r\n  Id: any;\r\n  Notes: any;\r\n  UserId: any;\r\n  BookingId: any;\r\n  ShowNoShow: boolean;\r\n  //Booking: IBooking;\r\n  //booking info\r\n  Reference: string;\r\n  ClientName: string;\r\n  ClaimentFirstName: string;\r\n  ClaimentLastName: string;\r\n  BookingDate: Date;\r\n  TrialDate: Date;\r\n  RequestedReportDate: Date;\r\n  Time: any;\r\n  Date: any;\r\n  BookingTime: any\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Development/raf-electron/raf-manager/src/app/services/assessment.service.ts"],"sourceRoot":"webpack:///"}