{"version":3,"sources":["C:/development/raf-electron/raf-manager/src/app/layout/bookings/bookings-routing.module.ts","C:/development/raf-electron/raf-manager/src/app/layout/bookings/bookings.component.html","C:/development/raf-electron/raf-manager/src/app/layout/bookings/bookings.component.scss","C:/development/raf-electron/raf-manager/src/app/layout/bookings/bookings.component.ts","C:/development/raf-electron/raf-manager/src/app/layout/bookings/bookings.module.ts","C:/development/raf-electron/raf-manager/src/app/services/bookings.service.ts"],"names":[],"mappings":"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","file":"bookings.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BookingsComponent } from './bookings.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: BookingsComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class BookingsRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/development/raf-electron/raf-manager/src/app/layout/bookings/bookings-routing.module.ts","module.exports = \"<div [@routerTransition]>\\r\\n    <app-page-header [heading]=\\\"'Bookings'\\\" [icon]=\\\"'fa-calendar'\\\"></app-page-header>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col col-xl-12 col-lg-12 col-xs-12\\\">\\r\\n            <div class=\\\"card mb-12\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    Upcoming bookings\\r\\n                    <button class=\\\"btn btn-primary pull-right\\\" (click)=\\\"open(content, this.booking, true)\\\">New Booking</button>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"card-body table-responsive\\\">\\r\\n                    <table class=\\\"table\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>Client Name</th>\\r\\n                                <th>Claiment First Name</th>\\r\\n                                <th>Claiment Last Name</th>\\r\\n                                <th>Booking date</th>\\r\\n                                <th>Time</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let booking of _bookings\\\" (click)=\\\"open(content,this.booking, false)\\\">\\r\\n                                <td>{{booking.ClientName}}</td>\\r\\n                                <td>{{booking.ClaimentFirstName}}</td>\\r\\n                                <td>{{booking.ClaimentLastName}}</td>\\r\\n                                <td>{{booking.BookingDate|date}}</td>\\r\\n                                <td>{{booking.Time}}</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n\\r\\n                    </table>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <h4 class=\\\"modal-title\\\">Booking Details</h4>\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"c('Close click')\\\">\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <ngb-tabset>\\r\\n                <ngb-tab title=\\\"Booking\\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n                        <form role=\\\"form\\\">\\r\\n                            <fieldset class=\\\"form-group\\\">\\r\\n                                <label for=\\\"clientname\\\">Client Name</label>\\r\\n                                <input name=\\\"clientname\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text\\\" [(ngModel)]=\\\"booking.ClientName\\\">\\r\\n                            </fieldset>\\r\\n                            <fieldset class=\\\"form-group\\\">\\r\\n                                <label for=\\\"claimentfirstname\\\">Claiment First Name</label>\\r\\n                                <input name=\\\"claimentfirstname\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text\\\" [(ngModel)]=\\\"booking.ClaimentFirstName\\\">\\r\\n                            </fieldset>\\r\\n                            <fieldset class=\\\"form-group\\\">\\r\\n                                <label for=\\\"claimentlastname\\\">Claiment Last Name</label>\\r\\n                                <input name=\\\"claimentlastname\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text\\\" [(ngModel)]=\\\"booking.ClaimentLastName\\\">\\r\\n                            </fieldset>\\r\\n                            <fieldset class=\\\"form-group\\\">\\r\\n                                <label for=\\\"bookingdate\\\">Booking Date</label>\\r\\n                                <!-- <input name=\\\"bookingdate\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text\\\" [(ngModel)]=\\\"booking.BookingDate\\\"> -->\\r\\n\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"bookingdate\\\" [(ngModel)]=\\\"booking.Date\\\" ngbDatepicker #b=\\\"ngbDatepicker\\\">\\r\\n                                    <div class=\\\"input-group-addon\\\" (click)=\\\"b.toggle()\\\">\\r\\n                                        <span class=\\\"fa fa-calendar\\\"></span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <fieldset class=\\\"form-group\\\">\\r\\n                                <label for=\\\"bookingtime\\\">Booking Time</label>\\r\\n                                <ngb-timepicker [(ngModel)]=\\\"booking.BookingTime\\\" name=\\\"bookingtime\\\"></ngb-timepicker>\\r\\n                            </fieldset>\\r\\n                            <fieldset class=\\\"form-group\\\">\\r\\n                                <label for=\\\"bookingreference\\\">Reference</label>\\r\\n                                <input name=\\\"bookingreference\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Booking Reference\\\" [(ngModel)]=\\\"booking.Reference\\\">\\r\\n                            </fieldset>\\r\\n                        </form>\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab title=\\\"Attorney\\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n                        <form role=\\\"form\\\">\\r\\n                            <fieldset class=\\\"form-group\\\">\\r\\n                                <label for=\\\"contactperson\\\">Contact Person</label>\\r\\n                                <input name=\\\"contactperson\\\" class=\\\"form-control\\\" placeholder=\\\"Name of contact person\\\" [(ngModel)]=\\\"attorney.ContactPerson\\\">\\r\\n                            </fieldset>\\r\\n                            <fieldset class=\\\"form-group\\\">\\r\\n                                <label for=\\\"contactnumber\\\">Phone Number</label>\\r\\n                                <input name=\\\"contactnumber\\\" class=\\\"form-control\\\" placeholder=\\\"Phone number of contact person\\\" [(ngModel)]=\\\"attorney.PhoneNumber\\\">\\r\\n                            </fieldset>\\r\\n                            <fieldset class=\\\"form-group\\\">\\r\\n                                <label for=\\\"contactemail\\\">Email</label>\\r\\n                                <input name=\\\"contactemail\\\" class=\\\"form-control\\\" placeholder=\\\"Email of contact person\\\" [(ngModel)]=\\\"attorney.Email\\\">\\r\\n                            </fieldset>\\r\\n                        </form>\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab title=\\\"more\\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n                        <form role=\\\"form\\\">\\r\\n                            <fieldset class=\\\"form-group\\\">\\r\\n                                <label for=\\\"trialdate\\\">Trial Date</label>\\r\\n                                <!-- <input name=\\\"trialdate\\\" class=\\\"form-control\\\" placeholder=\\\"Trial date\\\" [(ngModel)]=\\\"booking.ClientName\\\"> -->\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"trialdate\\\" [(ngModel)]=\\\"booking.TDate\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\r\\n                                    <div class=\\\"input-group-addon\\\" (click)=\\\"d.toggle()\\\">\\r\\n                                        <span class=\\\"fa fa-calendar\\\"></span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <fieldset class=\\\"form-group\\\">\\r\\n                                <label for=\\\"requestedreportdate\\\">Requested Report Date</label>\\r\\n                                <!-- <input name=\\\"requestedreportdate\\\" class=\\\"form-control\\\" placeholder=\\\"Report Date\\\" [(ngModel)]=\\\"booking.ClientName\\\"> -->\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"requestedreportdate\\\" [(ngModel)]=\\\"booking.RDate\\\" ngbDatepicker #e=\\\"ngbDatepicker\\\">\\r\\n                                    <div class=\\\"input-group-addon\\\" (click)=\\\"e.toggle()\\\">\\r\\n                                        <span class=\\\"fa fa-calendar\\\"></span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                        </form>\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab title=\\\"Documents\\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n                        <fieldset class=\\\"form-group\\\">\\r\\n                            <label for=\\\"doctype\\\">Document Type</label>\\r\\n                            <select name=\\\"doctype\\\" class=\\\"form-control\\\">\\r\\n                                    <option>ID Document</option>\\r\\n                                    <option>Instruction Letter</option>\\r\\n                                    <option>Prem Report</option>\\r\\n                                    <option>Full Report</option>                                    \\r\\n                            </select>\\r\\n                        </fieldset>\\r\\n                        <fieldset class=\\\"form-group\\\">\\r\\n                            <label for=\\\"inputfile\\\">File input</label>\\r\\n                            <input type=\\\"file\\\" class=\\\"form-control-file\\\" id=\\\"inputfile\\\">\\r\\n                        </fieldset>\\r\\n                        <div class=\\\"card mb-12\\\">\\r\\n                            <div class=\\\"card-header\\\">\\r\\n                                Uploaded Documents\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"card-body table-responsive\\\">\\r\\n                                <table class=\\\"table\\\">\\r\\n                                    <thead>\\r\\n                                        <th>Document Name</th>\\r\\n                                        <th>Document Type</th>\\r\\n                                    </thead>\\r\\n                                    <tbody>\\r\\n                                        <tr>\\r\\n                                            <td></td>\\r\\n                                            <td></td>\\r\\n                                        </tr>\\r\\n                                    </tbody>\\r\\n                                </table>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n            </ngb-tabset>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Close</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"saveBooking()\\\">Save</button>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/development/raf-electron/raf-manager/src/app/layout/bookings/bookings.component.html\n// module id = ../../../../../src/app/layout/bookings/bookings.component.html\n// module chunks = bookings.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/development/raf-electron/raf-manager/src/app/layout/bookings/bookings.component.scss\n// module id = ../../../../../src/app/layout/bookings/bookings.component.scss\n// module chunks = bookings.module","import { Component, OnInit } from '@angular/core';\r\nimport { BookingsService, IBooking, IAttorney } from '../../services/bookings.service';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Time } from '@angular/common/src/i18n/locale_data_api';\r\nimport { error } from 'util';\r\n\r\n\r\nconst now = new Date();\r\n\r\n@Component({\r\n    selector: 'app-bookings',\r\n    templateUrl: './bookings.component.html',\r\n    styleUrls: ['./bookings.component.scss'],\r\n    providers: [BookingsService, NgbModal, FormsModule, ReactiveFormsModule,],\r\n    animations: [routerTransition()]\r\n})\r\n\r\nexport class BookingsComponent implements OnInit {\r\n    _bookings: IBooking[];\r\n    closeResult: string;\r\n    booking: IBooking = this.initialiseBooking();\r\n    attorney: IAttorney = this.initialiseAttorney();\r\n    constructor(private bookingsService: BookingsService, private modalService: NgbModal) {}\r\n\r\n    getBookings(){\r\n        return this.bookingsService.getBookings();           \r\n    }\r\n\r\n    initialiseBooking() {\r\n        return {Id:0, ClientName:'', ClaimentFirstName: '', ClaimentLastName: '', BookingDate: now,TrialDate:null,RequestedReportDate:null,Reference:'', Time: null,BookingTime: {hour: 0, minute: 0},Date: {year: now.getFullYear(), month: now.getMonth() + 1, day: now.getDate()},TDate:{year: null, month: null, day: null},RDate:{year: null, month: null, day: null}};\r\n    }\r\n    initialiseAttorney() {\r\n        return {Id: 0,BookingId:0, ClientName:'',ContactPerson:'',PhoneNumber:'',Email:''};\r\n    }\r\n\r\n    saveBooking() {        \r\n       \r\n        if(this.booking.Date != null){\r\n            this.booking.BookingDate = new Date(this.booking.Date.year,this.booking.Date.month - 1,this.booking.Date.day, this.booking.BookingTime.hour,this.booking.BookingTime.minute,0,0);\r\n        }        \r\n        if(this.booking.TDate != null){\r\n            this.booking.TrialDate = new Date(this.booking.TDate.year,this.booking.TDate.month - 1,this.booking.TDate.day + 1,0,0,0,0);             \r\n        }\r\n        if(this.booking.RDate != null){\r\n            this.booking.RequestedReportDate = new Date(this.booking.RDate.year,this.booking.RDate.month - 1,this.booking.RDate.day + 1,0,0,0,0);   \r\n        }        \r\n       \r\n       this.booking.Time =  this.booking.BookingTime.hour + \":0\" + this.booking.BookingTime.minute + \":0\" + this.booking.BookingTime.second; \r\n       \r\n        this.bookingsService.saveBooking(this.booking).subscribe(o => {          \r\n            this.getBookings().subscribe(results => {\r\n                this._bookings = results;\r\n                var bookingId = results[results.length -1].Id;\r\n                //save the attorney details     \r\n                console.log(bookingId);\r\n                this.attorney.BookingId = bookingId;\r\n                this.attorney.ClientName = this.booking.ClientName;\r\n                this.bookingsService.saveAttorney(this.attorney).subscribe(a => console.log(''),error => console.log(\"Error :: \" + error));\r\n            });                  \r\n        },\r\n        error => console.log(\"Error :: \" + error));\r\n        \r\n        \r\n    }\r\n\r\n    ngOnInit() {\r\n       this.getBookings().subscribe(results => this._bookings = results,\r\n        error => console.log(\"Error :: \" + error));\r\n        //this.booking.ClientName = \"\";\r\n    }\r\n\r\n    open(content, data, isNew) {        \r\n        if(!isNew) {        \r\n            this.booking = data;\r\n            //get the attorney details\r\n            this.bookingsService.getAttorney(data.Id).subscribe(result => this.attorney = result,\r\n                error => console.log(\"Error :: \" + error));\r\n        } else{\r\n            this.booking = this.initialiseBooking();\r\n            this.attorney = this.initialiseAttorney();\r\n        }\r\n        \r\n        var date = new Date(this.booking.BookingDate);        \r\n        \r\n        this.booking.Date = {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()};\r\n        \r\n        if(this.booking.TrialDate != null){\r\n            var tdate = new Date(this.booking.TrialDate);\r\n            this.booking.TDate = {year: tdate.getFullYear(), month: tdate.getMonth() + 1, day: tdate.getDate()}\r\n        }\r\n        \r\n        if(this.booking.RequestedReportDate != null){\r\n            var tdate = new Date(this.booking.RequestedReportDate);\r\n            this.booking.RDate = {year: tdate.getFullYear(), month: tdate.getMonth() + 1, day: tdate.getDate()}\r\n        }\r\n                \r\n        if(this.booking.Time != null)\r\n            this.booking.BookingTime = {hour: this.booking.Time.toString().substr(0,2), minute: this.booking.Time.toString().substr(3,2)};\r\n\r\n        this.modalService.open(content).result.then((result) => {\r\n            this.closeResult = `Closed with: ${result}`;\r\n        }, (reason) => {\r\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n        });\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return  `with: ${reason}`;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/development/raf-electron/raf-manager/src/app/layout/bookings/bookings.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BookingsRoutingModule } from './bookings-routing.module';\r\nimport { BookingsComponent } from './bookings.component';\r\nimport { PageHeaderModule } from './../../shared';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, BookingsRoutingModule, PageHeaderModule, NgbModule.forRoot(), FormsModule, ReactiveFormsModule,],\r\n    declarations: [BookingsComponent]\r\n})\r\nexport class BookingsModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/development/raf-electron/raf-manager/src/app/layout/bookings/bookings.module.ts","import { Injectable } from '@angular/core';\r\nimport {Http, Response, Headers, RequestOptions, URLSearchParams} from \"@angular/http\";\r\nimport \"rxjs/Rx\";\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Time } from '@angular/common/src/i18n/locale_data_api';\r\n\r\n@Injectable()\r\nexport class BookingsService { \r\n  private _bookingURL = \"http://localhost:3000/bookings\";\r\n  private attorneyURL = \"http://localhost:3000/attorneys\";\r\n\r\n  headers: Headers;\r\n  options: RequestOptions;\r\n\r\n  constructor(private _http: Http) {\r\n    this.headers = new Headers({ 'Content-Type': 'application/json', \r\n    'Accept': 'q=0.8;application/json;q=0.9' });\r\n    this.options = new RequestOptions({ headers: this.headers });    \r\n   }\r\n\r\n  getBookings(): Observable<IBooking[]> {\r\n    return this._http.get(this._bookingURL)\r\n            .map((response: Response) => {\r\n              return <IBooking[]>response.json();\r\n            })\r\n            .catch(this.handleError);\r\n  }\r\n\r\n  getAttorney(bookingId: number): Observable<IAttorney> {\r\n    return this._http.get(this.attorneyURL + \"/\" + bookingId)\r\n            .map((response: Response) => {\r\n              return <IAttorney>response.json()[0];\r\n            })\r\n            .catch(this.handleError);\r\n  }\r\n\r\n  saveBooking(booking: IBooking){\r\n    if(booking.Id == 0){\r\n        console.log('saving booking...')\r\n        console.log(booking);\r\n        return this._http.post(this._bookingURL, booking,this.options)\r\n        .catch(this.handleError);\r\n    }else{\r\n      return this._http.put(this._bookingURL, booking,this.options)\r\n        .catch(this.handleError);\r\n    }\r\n    \r\n  }\r\n\r\n  saveAttorney(attorney: IAttorney){\r\n    if(attorney.Id == 0){\r\n      return this._http.post(this.attorneyURL, attorney,this.options)\r\n      .catch(this.handleError);\r\n  }else{\r\n    return this._http.put(this.attorneyURL, attorney,this.options)\r\n      .catch(this.handleError);\r\n  }\r\n  }\r\n\r\n  private handleError(error: Response){\r\n    return Observable.throw(error.statusText);\r\n  }\r\n\r\n}\r\n\r\n\r\nexport interface IBooking {\r\n  Id: number;\r\n  ClientName: string;\r\n  ClaimentFirstName: string;\r\n  ClaimentLastName: string;\r\n  BookingDate: Date;\r\n  TrialDate: Date;\r\n  RequestedReportDate: Date;\r\n  Reference: string;\r\n  Time: any;\r\n  Date: any;\r\n  BookingTime: any,\r\n  TDate: any,\r\n  RDate: any\r\n}\r\n\r\nexport interface IAttorney {\r\n  Id: number;\r\n  BookingId: number;\r\n  ClientName: string;\r\n  ContactPerson: string;\r\n  PhoneNumber: string;\r\n  Email: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/development/raf-electron/raf-manager/src/app/services/bookings.service.ts"],"sourceRoot":"webpack:///"}